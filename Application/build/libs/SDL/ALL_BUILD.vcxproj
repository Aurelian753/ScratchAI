<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{AF95EAF7-EA29-3268-896E-360363FA6556}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\src\ScratchAI\Application\libs\SDL\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/src/ScratchAI/Application/libs/SDL/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/src/ScratchAI/Application -BD:/src/ScratchAI/Application/build --check-stamp-file D:/src/ScratchAI/Application/build/libs/SDL/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-3.30\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLanguage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\WriteBasicConfigVersionFile.cmake;D:\src\ScratchAI\Application\build\CMakeFiles\3.30.2\CMakeASM_MASMCompiler.cmake;D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\git-data\grabRef.cmake;D:\src\ScratchAI\Application\build\libs\SDL\SDL_build_config.h.intermediate;D:\src\ScratchAI\Application\libs\SDL\.git\HEAD;D:\src\ScratchAI\Application\libs\SDL\.git\refs\heads\main;D:\src\ScratchAI\Application\libs\SDL\cmake\3rdparty.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\FindLibUSB.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedEmscriptenCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedMSVCCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\SDL3Config.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\cmake_uninstall.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\macros.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlchecks.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcompilers.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcpu.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlmanpages.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlplatform.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdltargets.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_build_config.h.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_revision.h.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/src/ScratchAI/Application/libs/SDL/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/src/ScratchAI/Application -BD:/src/ScratchAI/Application/build --check-stamp-file D:/src/ScratchAI/Application/build/libs/SDL/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-3.30\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLanguage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\WriteBasicConfigVersionFile.cmake;D:\src\ScratchAI\Application\build\CMakeFiles\3.30.2\CMakeASM_MASMCompiler.cmake;D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\git-data\grabRef.cmake;D:\src\ScratchAI\Application\build\libs\SDL\SDL_build_config.h.intermediate;D:\src\ScratchAI\Application\libs\SDL\.git\HEAD;D:\src\ScratchAI\Application\libs\SDL\.git\refs\heads\main;D:\src\ScratchAI\Application\libs\SDL\cmake\3rdparty.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\FindLibUSB.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedEmscriptenCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedMSVCCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\SDL3Config.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\cmake_uninstall.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\macros.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlchecks.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcompilers.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcpu.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlmanpages.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlplatform.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdltargets.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_build_config.h.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_revision.h.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/src/ScratchAI/Application/libs/SDL/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/src/ScratchAI/Application -BD:/src/ScratchAI/Application/build --check-stamp-file D:/src/ScratchAI/Application/build/libs/SDL/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-3.30\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLanguage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\WriteBasicConfigVersionFile.cmake;D:\src\ScratchAI\Application\build\CMakeFiles\3.30.2\CMakeASM_MASMCompiler.cmake;D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\git-data\grabRef.cmake;D:\src\ScratchAI\Application\build\libs\SDL\SDL_build_config.h.intermediate;D:\src\ScratchAI\Application\libs\SDL\.git\HEAD;D:\src\ScratchAI\Application\libs\SDL\.git\refs\heads\main;D:\src\ScratchAI\Application\libs\SDL\cmake\3rdparty.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\FindLibUSB.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedEmscriptenCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedMSVCCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\SDL3Config.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\cmake_uninstall.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\macros.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlchecks.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcompilers.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcpu.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlmanpages.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlplatform.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdltargets.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_build_config.h.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_revision.h.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/src/ScratchAI/Application/libs/SDL/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/src/ScratchAI/Application -BD:/src/ScratchAI/Application/build --check-stamp-file D:/src/ScratchAI/Application/build/libs/SDL/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-3.30\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeASM_MASMInformation.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeDependentOption.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakeParseArguments.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CMakePushCheckState.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckCXXSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLanguage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckStructHasMember.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\CheckSymbolExists.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\FindPkgConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckCompilerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckFlagCommonConfig.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckLinkerFlag.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\Internal\CheckSourceRuns.cmake;C:\Program Files\CMake\share\cmake-3.30\Modules\WriteBasicConfigVersionFile.cmake;D:\src\ScratchAI\Application\build\CMakeFiles\3.30.2\CMakeASM_MASMCompiler.cmake;D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\git-data\grabRef.cmake;D:\src\ScratchAI\Application\build\libs\SDL\SDL_build_config.h.intermediate;D:\src\ScratchAI\Application\libs\SDL\.git\HEAD;D:\src\ScratchAI\Application\libs\SDL\.git\refs\heads\main;D:\src\ScratchAI\Application\libs\SDL\cmake\3rdparty.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\FindLibUSB.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\GetGitRevisionDescription.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedEmscriptenCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\PreseedMSVCCache.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\SDL3Config.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\cmake_uninstall.cmake.in;D:\src\ScratchAI\Application\libs\SDL\cmake\macros.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlchecks.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcompilers.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlcpu.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlmanpages.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdlplatform.cmake;D:\src\ScratchAI\Application\libs\SDL\cmake\sdltargets.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_build_config.h.cmake;D:\src\ScratchAI\Application\libs\SDL\include\build_config\SDL_revision.h.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\src\ScratchAI\Application\build\libs\SDL\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\src\ScratchAI\Application\build\ZERO_CHECK.vcxproj">
      <Project>{EBE21355-35AA-3A64-B1C5-0469F37D7DB0}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\src\ScratchAI\Application\build\libs\SDL\SDL3-shared.vcxproj">
      <Project>{0064F4AD-B642-3597-9E1D-28F41E60464B}</Project>
      <Name>SDL3-shared</Name>
    </ProjectReference>
    <ProjectReference Include="D:\src\ScratchAI\Application\build\libs\SDL\SDL3_test.vcxproj">
      <Project>{8A3A2F26-3BDD-3832-A9C4-E763FC337219}</Project>
      <Name>SDL3_test</Name>
    </ProjectReference>
    <ProjectReference Include="D:\src\ScratchAI\Application\build\libs\SDL\SDL_uclibc.vcxproj">
      <Project>{B0B9B22A-4085-3A79-A100-0A701201B217}</Project>
      <Name>SDL_uclibc</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
  </ImportGroup>
</Project>